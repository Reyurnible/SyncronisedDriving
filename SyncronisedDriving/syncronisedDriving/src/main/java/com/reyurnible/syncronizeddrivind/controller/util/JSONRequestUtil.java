package com.reyurnible.syncronizeddrivind.controller.util;import android.util.Log;import com.android.volley.Request.Priority;import com.android.volley.RequestQueue;import com.android.volley.Response;import com.android.volley.Response.Listener;import com.android.volley.VolleyError;import com.reyurnible.syncronizeddrivind.controller.provider.CustomJSONRequest;import com.reyurnible.syncronizeddrivind.controller.provider.NetworkTaskCallback;import com.reyurnible.syncronizeddrivind.model.enumerate.NetworkTasks;import com.reyurnible.syncronizeddrivind.model.system.AppConfig;import org.json.JSONObject;import java.util.HashMap;import java.util.Map;//ストアの一覧を取得public class JSONRequestUtil {	private NetworkTaskCallback mCallback;	private String mRequestFrom;	private Map<String, String> mHeaders = new HashMap<String, String>();    public JSONRequestUtil(final NetworkTaskCallback callback, final String requestFrom, Map<String, String> headers) {        this.mCallback = callback;        this.mRequestFrom = requestFrom;        if (headers != null) {            this.mHeaders = headers;        }    }    public void onRequest(RequestQueue mQueue, final Priority requestPriority, final String url, final NetworkTasks task) {        this.onRequest(mQueue, requestPriority, url, task, null);    }    public void onRequest(RequestQueue mQueue, final Priority requestPriority, final String url, final NetworkTasks task, JSONObject params) {        if (AppConfig.DEBUG) {            Log.d(this.getClass().getSimpleName(), url);        }        CustomJSONRequest request = new CustomJSONRequest(task.method, url, params, new Listener<JSONObject>() {            @Override            public void onResponse(JSONObject response) {                try {                    if (AppConfig.DEBUG) {                        Log.d(this.getClass().getSimpleName(), "response:" + response.toString());                    }                    mCallback.onSuccessNetworkTask(task.id, response);                } catch (IllegalStateException e) {                    e.printStackTrace();                }            }        },        new Response.ErrorListener() {            @Override            public void onErrorResponse(VolleyError error) {                try{                    if(AppConfig.DEBUG){                        Log.d(this.getClass().getSimpleName(),"error:"+error.toString());                    }                    mCallback.onFailedNetworkTask(task.id, error);                }catch(IllegalStateException e){                    e.printStackTrace();                }            }        });        request.setPriority(requestPriority);        request.setTag(mRequestFrom);        mQueue.add(request);    }}